language: c

before_install:
    - export DISABLE_G2_BUILD=1
    - if [[ $TRAVIS_OS_NAME == "linux" ]]; then bash scripts/linux/install.sh; fi
    - if [[ $TRAVIS_OS_NAME == "osx" ]]; then sudo gem install xcpretty-travis-formatter; fi

sudo: required
dist: trusty
env:
    global:
        - OPENRCT2_VERSION="0.0.5.0"

matrix:
    include:
        - os: linux
          env:
            - OPENRCT2_CMAKE_OPTS="-DCMAKE_C_COMPILER=gcc-4.8 -DCMAKE_CXX_COMPILER=g++-4.8 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=OpenRCT2" OPENRCT2_MAKE_OPTS="-j2"
          after_success:
            - cd build
            - make install
            - mv OpenRCT2/bin/openrct2 OpenRCT2/ && mv OpenRCT2/share/openrct2 OpenRCT2/data && mv OpenRCT2/share/doc/openrct2 OpenRCT2/doc
            - rm -rf OpenRCT2/bin OpenRCT2/share # remove empty dirs
            - tar cvzf openrct2-linux.tar.gz OpenRCT2/
            - curl --progress-bar --upload-file openrct2-linux.tar.gz https://transfer.sh/openrct2-linux.tar.gz -o link && cat link;
        - os: linux
          env: OPENRCT2_CMAKE_OPTS="-DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++"
        - os: linux
          env: OPENRCT2_CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=../CMakeLists_mingw.txt" TARGET=windows
          after_success:
            - curl --progress-bar --upload-file build/openrct2.dll https://transfer.sh/openrct2-mingw.dll -o link && cat link;
        - os: linux
          env: TARGET=docker32
          services:
            - docker
        - os: linux
          env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=ON -DDISABLE_HTTP_TWITCH=ON" TARGET=docker32
          services:
            - docker
        - os: linux
          env: OPENRCT2_CMAKE_OPTS="-DDISABLE_OPENGL=ON" TARGET=docker32
          services:
            - docker
        - os: osx
          osx_image: xcode7.3
          after_success:
            - cd build/Release
            - zip -r openrct2-osx.zip OpenRCT2.app
            - curl --progress-bar --upload-file openrct2-osx.zip https://transfer.sh/openrct2-osx.zip -o link && cat link;
        - os: linux
          env: OPENRCT2_CMAKE_OPTS="-DFORCE64=ON" TARGET=linux64
        # Following entries used to be included in testing, but they only proved useful while changing things in CMake setup.
        # They are meant to be used when there are changes to CMakeLists.txt
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=ON -DDISABLE_HTTP_TWITCH=ON -DCMAKE_C_COMPILER=gcc-4.8 -DCMAKE_CXX_COMPILER=g++-4.8"
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=ON -DDISABLE_HTTP_TWITCH=ON -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++"
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=OFF -DDISABLE_HTTP_TWITCH=ON -DCMAKE_C_COMPILER=gcc-4.8 -DCMAKE_CXX_COMPILER=g++-4.8"
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=OFF -DDISABLE_HTTP_TWITCH=OFF -DCMAKE_C_COMPILER=gcc-4.8 -DCMAKE_CXX_COMPILER=g++-4.8"
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=ON -DCMAKE_TOOLCHAIN_FILE=../CMakeLists_mingw.txt" TARGET=windows
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=ON -DDISABLE_HTTP_TWITCH=ON -DCMAKE_TOOLCHAIN_FILE=../CMakeLists_mingw.txt" TARGET=windows
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_HTTP_TWITCH=ON -DCMAKE_TOOLCHAIN_FILE=../CMakeLists_mingw.txt" TARGET=windows

script:
    - if [[ $TRAVIS_OS_NAME == "linux" ]]; then bash scripts/linux/build.sh ; fi
    - if [[ $TRAVIS_OS_NAME == "osx" ]]; then set -o pipefail && xcodebuild | xcpretty -f `xcpretty-travis-formatter`; fi

notifications:
    on_failure: change
    on_success: change

cache:
    directories:
        - .cache
    apt: true
